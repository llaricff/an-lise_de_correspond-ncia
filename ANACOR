Análise de Correspondência Simples
Material retirado da aula de MBA em Data Science & Analytics, Esalq/USP. Aluna: Larissa Chacon Finzeto. Fonte: Fávero e Belfiore, MANUAL DE ANÁLISE DE DADOS, Capítulo 11

Pacotes:

```{r}
pacotes <- c("plotly",            #Plataforma gráfica
             "tidyverse",         #Carregar outros pacotes no R
             "ggrepel",           #Geoms de texto e rótulo para 'ggplot2', que ajudam a evitar sobreposição de textos
             "knitr",             #Formatação de tabelas
             "sjPlot",            #Elaboração de tabelas de contingência
             "FactoMineR",        #Função 'CA' para elaboração direta da Anacor
             "amap",              #Funções 'matlogic' e 'burt' para matrizes binária e de Burt
             "ade4"               #Função 'dudi.acm' para elaboração da ACM
             )

if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
  instalador <- pacotes[!pacotes %in% installed.packages()]
  for(i in 1:length(instalador)) {
    install.packages(instalador, dependencies = T)
    break()}
  sapply(pacotes, require, character = T) 
} else {
  sapply(pacotes, require, character = T) 
}

```

Agora vamos calcular as coordenadas para plotar as categorias no mapa perceptual.

Variável em linha na tabela de contingência ('perfil')

Coordenadas das abcissas

```{r}

coord_abcissas_perfil <- sqrt(valores_singulares[1]) * (massa_colunas^-0.5) * autovetor_u[,1]
coord_abcissas_perfil

```
Coordenadas das ordenadas

```{r}

coord_ordenadas_perfil <- sqrt(valores_singulares[2]) * (massa_colunas^-0.5) * autovetor_u[,2]
coord_ordenadas_perfil

```


Variável em coluna na tabela de contingência ('aplicacao')

Coordenadas das abcissas

```{r}

coord_abcissas_aplicacao <- sqrt(valores_singulares[1]) * (massa_linhas^-0.5) * autovetor_v[,1]
coord_abcissas_aplicacao

```
Coordenadas das ordenadas

```{r}

coord_ordenadas_aplicacao <- sqrt(valores_singulares[2]) * (massa_linhas^-0.5) * autovetor_v[,2]
coord_ordenadas_aplicacao

```

Por fim, o mapa perceptual

```{r}

cbind.data.frame(coord_abcissas_perfil, coord_ordenadas_perfil,
                 coord_abcissas_aplicacao, coord_ordenadas_aplicacao) %>%
  rename(dim_1_perfil = 1,
         dim_2_perfil = 2,
         dim_1_aplicacao = 3,
         dim_2_aplicacao = 4) %>%
  rownames_to_column() %>%
  setNames(make.names(names(.), unique = TRUE)) %>%
  mutate(aplicacao = rownames(data.frame(coord_abcissas_aplicacao,
                                         coord_ordenadas_aplicacao))) %>%
  rename(perfil = 1,
         dim_1_perfil = 2,
         dim_2_perfil = 3,
         dim_1_aplicacao = 4,
         dim_2_aplicacao = 5) %>%
  ggplot() +
  geom_point(aes(x = dim_1_perfil, y = dim_2_perfil),
             color = "deeppink1",
             fill = "deeppink1",
             shape = 24,
             size = 4) +
  geom_text_repel(aes(x = dim_1_perfil, y = dim_2_perfil, label = perfil)) +
  geom_point(aes(x = dim_1_aplicacao, y = dim_2_aplicacao),
             color = "turquoise3",
             fill = "turquoise3",
             shape = 21,
             size = 4) +
  geom_text_repel(aes(x = dim_1_aplicacao, y = dim_2_aplicacao, label = aplicacao)) +
  geom_vline(aes(xintercept = 0), linetype = "longdash", color = "grey48") +
  geom_hline(aes(yintercept = 0), linetype = "longdash", color = "grey48") +
  labs(x = paste("Dimensão 1:", paste0(round(variancia_explicada[1] * 100, 2),"%")),
       y = paste("Dimensão 2:", paste0(round(variancia_explicada[2] * 100, 2),"%"))) +
  theme_classic()

```

O resultado pode ser obtido por meio da função 'CA' do pacote 'FactoMineR'

```{r}

anacor <- CA(tabela_contingencia, graph = TRUE)

```

FIM
